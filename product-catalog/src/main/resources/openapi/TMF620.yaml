openapi: 3.0.1
info:
  title: Product Catalog Management
  description: >-
    Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to
    provide a catalog of products. 

    ### Operations

    Product Catalog API performs the following operations on the resources :

    - Retrieve an entity or a collection of entities depending on filter criteria

    - Partial update of an entity (including updating rules)

    - Create an entity (including default values and creation rules)

    - Delete an entity

    - Manage notification of events
  version: 5.0.0
servers:
  - url: 'https://serverRoot/productCatalogManagement/v5/'
paths:
  /productCatalog:
    get:
      tags:
        - productCatalog
      summary: List or find ProductCatalog objects
      description: List or find ProductCatalog objects
      operationId: listProductCatalog
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          $ref: '#/components/responses/200'
components:
  schemas:
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
  parameters: 
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    responses:
      '200':
        description: OK
      '202':
        description: Accepted
      '204':
        description: Deleted
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '403':
        description: Forbidden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '405':
        description: Method Not allowed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '409':
        description: Conflict
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '501':
        description: Not Implemented
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      '503':
        description: Service Unavailable
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
  responses:
    '200':
      description: OK